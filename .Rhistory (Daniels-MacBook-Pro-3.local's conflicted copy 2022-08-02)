rand_slope_mat_pop7 <- glm_slopes(rand_mat_pop7)
rand_slope_mat_pop8 <- glm_slopes(rand_mat_pop8)
rand_slope_mat_pop9 <- glm_slopes(rand_mat_pop9)
rand_slope_mat_pop10 <- glm_slopes(rand_mat_pop10)
rand_slope_mat_pop11 <- glm_slopes(rand_mat_pop11)
rand_slope_mat_pop12 <- glm_slopes(rand_mat_pop12)
rand_slope_map_pop1 <- glm_slopes(rand_map_pop1)
rand_slope_map_pop2 <- glm_slopes(rand_map_pop2)
rand_slope_map_pop3 <- glm_slopes(rand_map_pop3)
rand_slope_map_pop4 <- glm_slopes(rand_map_pop4)
rand_slope_map_pop5 <- glm_slopes(rand_map_pop5)
rand_slope_map_pop6 <- glm_slopes(rand_map_pop6)
rand_slope_map_pop7 <- glm_slopes(rand_map_pop7)
rand_slope_map_pop8 <- glm_slopes(rand_map_pop8)
rand_slope_map_pop9 <- glm_slopes(rand_map_pop9)
rand_slope_map_pop10 <- glm_slopes(rand_map_pop10)
rand_slope_map_pop11 <- glm_slopes(rand_map_pop11)
rand_slope_map_pop12 <- glm_slopes(rand_map_pop12)
rand_slope_cmd_pop1 <- glm_slopes(rand_cmd_pop1)
rand_slope_cmd_pop2 <- glm_slopes(rand_cmd_pop2)
rand_slope_cmd_pop3 <- glm_slopes(rand_cmd_pop3)
rand_slope_cmd_pop4 <- glm_slopes(rand_cmd_pop4)
rand_slope_cmd_pop5 <- glm_slopes(rand_cmd_pop5)
rand_slope_cmd_pop6 <- glm_slopes(rand_cmd_pop6)
rand_slope_cmd_pop7 <- glm_slopes(rand_cmd_pop7)
rand_slope_cmd_pop8 <- glm_slopes(rand_cmd_pop8)
rand_slope_cmd_pop9 <- glm_slopes(rand_cmd_pop9)
rand_slope_cmd_pop10 <- glm_slopes(rand_cmd_pop10)
rand_slope_cmd_pop11 <- glm_slopes(rand_cmd_pop11)
rand_slope_cmd_pop12 <- glm_slopes(rand_cmd_pop12)
#Bind populations for each env
rand_slope_mat <- rbind(rand_slope_mat_pop1,
rand_slope_mat_pop2,
rand_slope_mat_pop3,
rand_slope_mat_pop4,
rand_slope_mat_pop5,
rand_slope_mat_pop6,
rand_slope_mat_pop7,
rand_slope_mat_pop8,
rand_slope_mat_pop9,
rand_slope_mat_pop10,
rand_slope_mat_pop11,
rand_slope_mat_pop12)
rand_slope_map <- rbind(rand_slope_map_pop1,
rand_slope_map_pop2,
rand_slope_map_pop3,
rand_slope_map_pop4,
rand_slope_map_pop5,
rand_slope_map_pop6,
rand_slope_map_pop7,
rand_slope_map_pop8,
rand_slope_map_pop9,
rand_slope_map_pop10,
rand_slope_map_pop11,
rand_slope_map_pop12)
rand_slope_cmd <- rbind(rand_slope_cmd_pop1,
rand_slope_cmd_pop2,
rand_slope_cmd_pop3,
rand_slope_cmd_pop4,
rand_slope_cmd_pop5,
rand_slope_cmd_pop6,
rand_slope_cmd_pop7,
rand_slope_cmd_pop8,
rand_slope_cmd_pop9,
rand_slope_cmd_pop10,
rand_slope_cmd_pop11,
rand_slope_cmd_pop12)
rand_slope_mat <- rand_slope_mat %>% mutate (Seed_ID = seed_num)
rand_slope_map <- rand_slope_map %>% mutate (Seed_ID = seed_num)
rand_slope_cmd <- rand_slope_cmd %>% mutate (Seed_ID = seed_num)
#Export each joint df
rand_slope_mat_out<-rbind(rand_slope_mat_out,rand_slope_mat)
rand_slope_map_out<-rbind(rand_slope_map_out,rand_slope_map)
rand_slope_cmd_out<-rbind(rand_slope_cmd_out,rand_slope_cmd)
print(seed_num)
}
#Save large files in folder outside of github
setwd("~/Dropbox/AM_Workshop/Large_files")
write_csv(rand_slope_mat_out, "rand_slope_mat_multi.csv")
write_csv(rand_slope_map_out, "rand_slope_map_multi.csv")
write_csv(rand_slope_cmd_out, "rand_slope_cmd_multi.csv")
setwd("~/Dropbox/AM_Workshop/AM_Workshop/")
getwd()
##################################################################################
## Generate input for strength of selection graphs
## Processing for both observation and permuted CI
## Author Daniel Anstett
##
##
## Last Modified May 17, 2022
###################################################################################
###################################################################################
#Import libraries
library(tidyverse)
###################################################################################
#Function for generating stratigied random distribution
###################################################################################
#get_range
get_range <- function(df,site){
# env Example
env_slope <- df %>% filter(Site==site)
#Make dataframe
env_obs <- data.frame()
#Get ranges
env_range1 <- env_slope %>% filter(Slope >= -2 & Slope< -1.8)
env_range2 <- env_slope %>% filter(Slope >= -1.8 & Slope < -1.6)
env_range3 <- env_slope %>% filter(Slope >= -1.6 & Slope < -1.4)
env_range4 <- env_slope %>% filter(Slope >= -1.4 & Slope < -1.2)
env_range5 <- env_slope %>% filter(Slope >= -1.2 & Slope < -1)
env_range6 <- env_slope %>% filter(Slope >= -1 & Slope < -0.8)
env_range7 <- env_slope %>% filter(Slope >= -0.8 & Slope < -0.6)
env_range8 <- env_slope %>% filter(Slope >= -0.6 & Slope < -0.4)
env_range9 <- env_slope %>% filter(Slope >= -0.4 & Slope < -0.2)
env_range10 <- env_slope %>% filter(Slope >= -0.2 & Slope < 0)
env_range11 <- env_slope %>% filter(Slope >= 0 & Slope < 0.2)
env_range12 <- env_slope %>% filter(Slope >= 0.2 & Slope < 0.4)
env_range13 <- env_slope %>% filter(Slope >= 0.3 & Slope < 0.6)
env_range14 <- env_slope %>% filter(Slope >= 0.4 & Slope < 0.8)
env_range15 <- env_slope %>% filter(Slope >= 0.8 & Slope < 1)
env_range16 <- env_slope %>% filter(Slope >= 1 & Slope < 1.2)
env_range17 <- env_slope %>% filter(Slope >= 1.2 & Slope < 1.4)
env_range18 <- env_slope %>% filter(Slope >= 1.4 & Slope < 1.6)
env_range19 <- env_slope %>% filter(Slope >= 1.6 & Slope < 1.8)
env_range20 <- env_slope %>% filter(Slope >= 1.8 & Slope < 2)
#get dim and put into dataframe
env_obs[1,1] <- dim(env_range1)[1]
env_obs[2,1] <- dim(env_range2)[1]
env_obs[3,1] <- dim(env_range3)[1]
env_obs[4,1] <- dim(env_range4)[1]
env_obs[5,1] <- dim(env_range5)[1]
env_obs[6,1] <- dim(env_range6)[1]
env_obs[7,1] <- dim(env_range7)[1]
env_obs[8,1] <- dim(env_range8)[1]
env_obs[9,1] <- dim(env_range9)[1]
env_obs[10,1] <- dim(env_range10)[1]
env_obs[11,1] <- dim(env_range11)[1]
env_obs[12,1] <- dim(env_range12)[1]
env_obs[13,1] <- dim(env_range13)[1]
env_obs[14,1] <- dim(env_range14)[1]
env_obs[15,1] <- dim(env_range15)[1]
env_obs[16,1] <- dim(env_range16)[1]
env_obs[17,1] <- dim(env_range17)[1]
env_obs[18,1] <- dim(env_range18)[1]
env_obs[19,1] <- dim(env_range19)[1]
env_obs[20,1] <- dim(env_range20)[1]
return(env_obs)
}
###################################################################################
#Import observed slopes
mat_slope <- read_csv("Genomics_scripts/Data/freq_MAT_slope.csv")
map_slope <- read_csv("Genomics_scripts/Data/freq_MAP_slope.csv")
cmd_slope <- read_csv("Genomics_scripts/Data/freq_cmd_slope.csv")
setwd("/Users/daniel_anstett/Dropbox/AM_Workshop/Large_files")
#Import large files with 1000 X random slopes
mat_bars <- read_csv("rand_slope_mat_multi.csv")
map_bars <- read_csv("rand_slope_map_multi.csv")
cmd_bars <- read_csv("rand_slope_cmd_multi.csv")
setwd("/Users/daniel_anstett/Dropbox/AM_Workshop/AM_Workshop")
###################################################################################
## Organize slope data
###################################################################################
#Filter data within s = -2 to 2
mat_slope2 <- mat_slope %>% filter(Slope<2 & Slope>-2)
map_slope2 <- map_slope %>% filter(Slope<2 & Slope>-2)
cmd_slope2 <- cmd_slope %>% filter(Slope<2 & Slope>-2)
mat_bars2 <- mat_bars %>% filter(Slope<2 & Slope>-2)
map_bars2 <- map_bars %>% filter(Slope<2 & Slope>-2)
cmd_bars2 <- cmd_bars %>% filter(Slope<2 & Slope>-2)
#Setup data frame
env_obs <- as.data.frame(c(-1.9,-1.7,-1.5,-1.3,-1.1,-0.9,-0.7,-0.5,-0.3,-0.1,
0.1,0.3,0.5,0.7,0.9,1.1,1.3,1.5,1.7,1.9))
###################################################################################
#Run get range function
#MAT
mat_obs1 <- get_range(mat_slope2,1)
mat_obs2 <- get_range(mat_slope2,2)
mat_obs3 <- get_range(mat_slope2,3)
mat_obs4 <- get_range(mat_slope2,4)
mat_obs5 <- get_range(mat_slope2,5)
mat_obs6 <- get_range(mat_slope2,6)
mat_obs7 <- get_range(mat_slope2,7)
mat_obs8 <- get_range(mat_slope2,8)
mat_obs9 <- get_range(mat_slope2,9)
mat_obs10 <- get_range(mat_slope2,10)
mat_obs11 <- get_range(mat_slope2,11)
mat_obs12 <- get_range(mat_slope2,12)
mat_obs <- cbind(env_obs,mat_obs1,mat_obs2,mat_obs3,mat_obs4,mat_obs5,mat_obs6,
mat_obs7,mat_obs8,mat_obs9,mat_obs10,mat_obs11,mat_obs12)
colnames(mat_obs) = c("S","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12")
#map
map_obs1 <- get_range(map_slope2,1)
map_obs2 <- get_range(map_slope2,2)
map_obs3 <- get_range(map_slope2,3)
map_obs4 <- get_range(map_slope2,4)
map_obs5 <- get_range(map_slope2,5)
map_obs6 <- get_range(map_slope2,6)
map_obs7 <- get_range(map_slope2,7)
map_obs8 <- get_range(map_slope2,8)
map_obs9 <- get_range(map_slope2,9)
map_obs10 <- get_range(map_slope2,10)
map_obs11 <- get_range(map_slope2,11)
map_obs12 <- get_range(map_slope2,12)
map_obs <- cbind(env_obs,map_obs1,map_obs2,map_obs3,map_obs4,map_obs5,map_obs6,
map_obs7,map_obs8,map_obs9,map_obs10,map_obs11,map_obs12)
colnames(map_obs) = c("S","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12")
#cmd
cmd_obs1 <- get_range(cmd_slope2,1)
cmd_obs2 <- get_range(cmd_slope2,2)
cmd_obs3 <- get_range(cmd_slope2,3)
cmd_obs4 <- get_range(cmd_slope2,4)
cmd_obs5 <- get_range(cmd_slope2,5)
cmd_obs6 <- get_range(cmd_slope2,6)
cmd_obs7 <- get_range(cmd_slope2,7)
cmd_obs8 <- get_range(cmd_slope2,8)
cmd_obs9 <- get_range(cmd_slope2,9)
cmd_obs10 <- get_range(cmd_slope2,10)
cmd_obs11 <- get_range(cmd_slope2,11)
cmd_obs12 <- get_range(cmd_slope2,12)
cmd_obs <- cbind(env_obs,cmd_obs1,cmd_obs2,cmd_obs3,cmd_obs4,cmd_obs5,cmd_obs6,
cmd_obs7,cmd_obs8,cmd_obs9,cmd_obs10,cmd_obs11,cmd_obs12)
colnames(cmd_obs) = c("S","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12")
###############################################################################################
# Get CI
###############################################################################################
#Example of getting ci
mat_ci_prep <- data.frame()
for(j in 1:12){
for(i in 0:19){
mat_bars <- mat_bars2 %>% filter(Site==j)
mat_test <- mat_bars %>% filter(Slope >= (-2+0.2*i) & Slope< (-1.8+0.2*i))
mat_count <- mat_test %>% count(Seed_ID)
mat_ci_prep[1+i,j*2-1] <- as.numeric(quantile(mat_count$n, probs = c(0.025, 0.975))[1])
mat_ci_prep[1+i,j*2] <- as.numeric(quantile(mat_count$n, probs = c(0.025, 0.975))[2])
}
}
map_ci_prep <- data.frame()
for(j in 1:12){
for(i in 0:19){
map_bars <- map_bars2 %>% filter(Site==j)
map_test <- map_bars %>% filter(Slope >= (-2+0.2*i) & Slope< (-1.8+0.2*i))
map_count <- map_test %>% count(Seed_ID)
map_ci_prep[1+i,j*2-1] <- as.numeric(quantile(map_count$n, probs = c(0.025, 0.975))[1])
map_ci_prep[1+i,j*2] <- as.numeric(quantile(map_count$n, probs = c(0.025, 0.975))[2])
}
}
cmd_ci_prep <- data.frame()
for(j in 1:12){
for(i in 0:19){
cmd_bars <- cmd_bars2 %>% filter(Site==j)
cmd_test <- cmd_bars %>% filter(Slope >= (-2+0.2*i) & Slope< (-1.8+0.2*i))
cmd_count <- cmd_test %>% count(Seed_ID)
cmd_ci_prep[1+i,j*2-1] <- as.numeric(quantile(cmd_count$n, probs = c(0.025, 0.975))[1])
cmd_ci_prep[1+i,j*2] <- as.numeric(quantile(cmd_count$n, probs = c(0.025, 0.975))[2])
}
}
colnames(mat_ci_prep) <- c("p1_low","p1_up","p2_low","p2_up","p3_low","p3_up","p4_low","p4_up"
,"p5_low","p5_up","p6_low","p6_up","p7_low","p7_up","p8_low","p8_up"
,"p9_low","p9_up","p10_low","p10_up","p11_low","p11_up","p12_low","p12_up")
colnames(map_ci_prep) <- c("p1_low","p1_up","p2_low","p2_up","p3_low","p3_up","p4_low","p4_up"
,"p5_low","p5_up","p6_low","p6_up","p7_low","p7_up","p8_low","p8_up"
,"p9_low","p9_up","p10_low","p10_up","p11_low","p11_up","p12_low","p12_up")
colnames(cmd_ci_prep) <- c("p1_low","p1_up","p2_low","p2_up","p3_low","p3_up","p4_low","p4_up"
,"p5_low","p5_up","p6_low","p6_up","p7_low","p7_up","p8_low","p8_up"
,"p9_low","p9_up","p10_low","p10_up","p11_low","p11_up","p12_low","p12_up")
###############################################################################################
# Merge data frames and export
mat_obs_ci <- cbind(mat_obs,mat_ci_prep)
map_obs_ci <- cbind(map_obs,map_ci_prep)
cmd_obs_ci <- cbind(cmd_obs,cmd_ci_prep)
#Name each dataframe as a variable
mat_obs_ci$env <- "MAT"
map_obs_ci$env <- "MAP"
cmd_obs_ci$env <- "CMD"
#Bind into single data frame
env_obs_ci <- rbind(mat_obs_ci,map_obs_ci,cmd_obs_ci)
#Export
write_csv(mat_obs_ci, "mat_obs_ci.csv")
write_csv(map_obs_ci, "map_obs_ci.csv")
write_csv(cmd_obs_ci, "cmd_obs_ci.csv")
write_csv(env_obs_ci, "env_obs_ci.csv")
##################################################################################
## Generate input for strength of selection graphs
## Processing for both observation and permuted CI
## Author Daniel Anstett
##
## Modified from https://jkzorz.github.io/2020/05/17/Error-bars.html
## Last Modified May 17, 2022
###################################################################################
#Function
#hist_ci <- function(df,site,low_CI,high_CI){
#  emv_hist <- ggplot(df,aes(x=S,y=site,ymin=low_CI,ymax=p2_high_CI))+
#    geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
#    geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
#    labs(x = "Strength of Selection", y = "Count") +
#    theme_classic()
#  emv_hist <- emv_hist +
#    theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
#          axis.title = element_text(size = 20, face = "bold"),
#          axis.text.y = element_text(size = 16, face = "bold"))
#  #  scale_y_continuous(expand = c(0,0))
#  return(emv_hist)
#}
###################################################################################
#Import libraries
library(tidyverse)
#Import files
mat_obs_ci <- read_csv("mat_obs_ci.csv")
map_obs_ci <- read_csv("map_obs_ci.csv")
cmd_obs_ci <- read_csv("cmd_obs_ci.csv")
env_obs_ci <- read_csv("env_obs_ci.csv")
###################################################################################
## Histogram graphs with CI
###################################################################################
# Site 1
mat_p1_hist <- ggplot(env_obs_ci,aes(x=S,y=p1,ymin=p1_low,ymax=p1_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P1)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p1_hist <- mat_p1_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p1_hist <- mat_p1_hist + facet_wrap(.~env)
mat_p1_hist
# Site 1
mat_p1_hist <- ggplot(env_obs_ci,aes(x=S,y=p1,ymin=p1_low,ymax=p1_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P1)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p1_hist <- mat_p1_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p1_hist <- mat_p1_hist + facet_wrap(.~env)
mat_p1_hist
ggsave("Graphs_CI/env_hist_ci_p1.pdf",width=10, height = 6, units = "in")
# Site 12
mat_p12_hist <- ggplot(env_obs_ci,aes(x=S,y=p12,ymin=p12_low,ymax=p12_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P12)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p12_hist <- mat_p12_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p12_hist <- mat_p12_hist + facet_wrap(.~env)
mat_p12_hist
ggsave("Graphs_CI/env_hist_ci_p12.pdf",width=10, height = 6, units = "in")
# Site 2
mat_p2_hist <- ggplot(env_obs_ci,aes(x=S,y=p2,ymin=p2_low,ymax=p2_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P2)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p2_hist <- mat_p2_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p2_hist <- mat_p2_hist + facet_wrap(.~env)
mat_p2_hist
ggsave("Graphs_CI/env_hist_ci_p2.pdf",width=10, height = 6, units = "in")
# Site 3
mat_p3_hist <- ggplot(env_obs_ci,aes(x=S,y=p3,ymin=p3_low,ymax=p3_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P3)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p3_hist <- mat_p3_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p3_hist <- mat_p3_hist + facet_wrap(.~env)
mat_p3_hist
ggsave("Graphs_CI/env_hist_ci_p3.pdf",width=10, height = 6, units = "in")
# Site 4
mat_p4_hist <- ggplot(env_obs_ci,aes(x=S,y=p4,ymin=p4_low,ymax=p4_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P4)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p4_hist <- mat_p4_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p4_hist <- mat_p4_hist + facet_wrap(.~env)
mat_p4_hist
ggsave("Graphs_CI/env_hist_ci_p4.pdf",width=10, height = 6, units = "in")
# Site 5
mat_p5_hist <- ggplot(env_obs_ci,aes(x=S,y=p5,ymin=p5_low,ymax=p5_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P5)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p5_hist <- mat_p5_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p5_hist <- mat_p5_hist + facet_wrap(.~env)
mat_p5_hist
ggsave("Graphs_CI/env_hist_ci_p5.pdf",width=10, height = 6, units = "in")
# Site 6
mat_p6_hist <- ggplot(env_obs_ci,aes(x=S,y=p6,ymin=p6_low,ymax=p6_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P6)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p6_hist <- mat_p6_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p6_hist <- mat_p6_hist + facet_wrap(.~env)
mat_p6_hist
ggsave("Graphs_CI/env_hist_ci_p6.pdf",width=10, height = 6, units = "in")
# Site 7
mat_p7_hist <- ggplot(env_obs_ci,aes(x=S,y=p7,ymin=p7_low,ymax=p7_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P7)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p7_hist <- mat_p7_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p7_hist <- mat_p7_hist + facet_wrap(.~env)
mat_p7_hist
ggsave("Graphs_CI/env_hist_ci_p7.pdf",width=10, height = 6, units = "in")
# Site 8
mat_p8_hist <- ggplot(env_obs_ci,aes(x=S,y=p8,ymin=p8_low,ymax=p8_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P8)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p8_hist <- mat_p8_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p8_hist <- mat_p8_hist + facet_wrap(.~env)
mat_p8_hist
ggsave("Graphs_CI/env_hist_ci_p8.pdf",width=10, height = 6, units = "in")
# Site 9
mat_p9_hist <- ggplot(env_obs_ci,aes(x=S,y=p9,ymin=p9_low,ymax=p9_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P9)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p9_hist <- mat_p9_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p9_hist <- mat_p9_hist + facet_wrap(.~env)
mat_p9_hist
ggsave("Graphs_CI/env_hist_ci_p9.pdf",width=10, height = 6, units = "in")
# Site 10
mat_p10_hist <- ggplot(env_obs_ci,aes(x=S,y=p10,ymin=p10_low,ymax=p10_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P10)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p10_hist <- mat_p10_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p10_hist <- mat_p10_hist + facet_wrap(.~env)
mat_p10_hist
ggsave("Graphs_CI/env_hist_ci_p10.pdf",width=10, height = 6, units = "in")
# Site 11
mat_p11_hist <- ggplot(env_obs_ci,aes(x=S,y=p11,ymin=p11_low,ymax=p11_up))+
geom_bar(colour = "black", stat = "identity", width = 0.2, fill = "lightblue1")+
geom_errorbar(colour = "firebrick2", stat = "identity", width = 0.12) +
labs(x = "Strength of Selection (P11)", y = "# of SNPs") +
#  scale_y_continuous(limits=c(0,300))+
theme_classic()
mat_p11_hist <- mat_p11_hist +
theme(axis.text.x = element_text(size = 16, face = "bold", angle = 0,hjust = 0.4, vjust = 0.7),
axis.title = element_text(size = 20, face = "bold"),
axis.text.y = element_text(size = 16, face = "bold"))
mat_p11_hist <- mat_p11_hist + facet_wrap(.~env)
mat_p11_hist
ggsave("Graphs_CI/env_hist_ci_p11.pdf",width=10, height = 6, units = "in")
##################################################################################
## Filter out strong evidence for snps associated with climate
## Author Daniel Anstett & Julia Anstett
##
##
## Last Modified July 6, 2021
###################################################################################
###################################################################################
#Import libraries
library(tidyverse)
library(qqman)
#Import chromosome size
chr_size <- read_csv("Genomics_scripts/Data/chr_size.csv")
chr_size[,3] <- cumsum(chr_size$size) #get cumulative chromosome position
colnames(chr_size)[3] <- "poz"
#Import snp env associations
env1 <- read.table("/Users/daniel_anstett/Dropbox/AM_Workshop/trim/ENV_1_trim.tsv",header=F, sep=" ")
head(env1)
