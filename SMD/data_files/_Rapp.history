getwd()
library(raster)
library(raster)
library(raster)
library(raster)
library(raster)
library(raster)
library(maptools)
library(maptools)
library(maptools)
library(maptools)
library(gam)
library(randomForest)
library(dismo)
library(gbm)
path.root="/Users/amyangert/Google Drive/OccAmNat" #
path.dat = paste(path.root, "/data files", sep="")#
path.obj = paste(path.root, "/R objects", sep="")#
path.fig = paste(path.root, "/figures", sep="")#
path.cod = paste(path.root, "/R code", sep="")
setwd(path.obj)#
#
for (i in 1:10) {#
	mod.lr = get(load(paste("LR.mod2.",i,".pseudo11.Rda", sep="")))#
	assign(paste("LR.mod2.",i, sep=""), mod.lr)#
	mod.gam = get(load(paste("GAM.mod4.",i,".pseudo11.Rda", sep="")))#
	assign(paste("GAM.mod4.",i, sep=""), mod.gam)#
	mod.rf = get(load(paste("RF.mod1.",i,".pseudo11.Rda", sep="")))  #
	assign(paste("RF.mod1.",i, sep=""), mod.rf)#
	mod.brt = get(load(paste("BRT.mod4.",i,".pseudo11.Rda", sep="")))#
	assign(paste("BRT.mod4.",i, sep=""), mod.brt)  #
	mod.max = get(load(paste("MAX.mod1.",i,".pseudo11.Rda", sep="")))#
	assign(paste("MAX.mod1.",i, sep=""), mod.max)  #
	}#
#
# load external and internal accuracy scores #
ext.accs.lr = get(load("LR.mod2.extaccs.pseudo11.Rda")); cv.accs.lr <- get(load("LR.mod2.cvaccs.pseudo11.Rda")); accs.lr <- get(load("LR.mod2.accs.pseudo11.Rda"))#
ext.accs.gam = get(load("GAM.mod4.extaccs.pseudo11.Rda")); cv.accs.gam = get(load("GAM.mod4.cvaccs.pseudo11.Rda")); accs.gam = get(load("GAM.mod4.accs.pseudo11.Rda"))#
ext.accs.rf = get(load("RF.mod1.extaccs.pseudo11.Rda")); accs.rf = get(load("RF.mod1.accs.pseudo11.Rda"))#
ext.accs.brt = get(load("BRT.mod4.extaccs.pseudo11.Rda")); cv.accs.brt = get(load("BRT.mod4.accs.pseudo11.Rda")); accs.brt = get(load("BRT.mod4.resubaccs.pseudo11.Rda"))#
ext.accs.max = get(load("MAX.mod1.extaccs.pseudo11.Rda")); cv.accs.max = get(load("MAX.mod1.cvaccs.pseudo11.Rda")); accs.max = get(load("MAX.mod1.accs.pseudo11.Rda"))#
#
lr.cuts = ext.accs.lr[ext.accs.lr$thresh=="SensSpec", "threshold"]#
gam.cuts = ext.accs.gam[ext.accs.gam$thresh=="SensSpec", "threshold"]#
rf.cuts = ext.accs.rf[ext.accs.rf$thresh=="SensSpec", "threshold"]#
brt.cuts = ext.accs.brt[ext.accs.brt$thresh=="SensSpec", "threshold"]#
max.cuts = ext.accs.max[ext.accs.max$thresh=="SensSpec", "threshold"]#
#
cuts <- cbind(lr.cuts, gam.cuts, rf.cuts, brt.cuts, max.cuts)#
#
## read in occupancy dataset + bioclim predictor variables#
setwd(path.dat)#
all = read.csv("all.records.aug.31.csv") #includes occupancy dataset, cleaned herbarium records, and 20K pseudoabs drawn to match envir space of true absences#
occ = all[all$DATASET=="occ",] #pull out occupancy dataset#
occ$bio3 = log(occ$bio3+0.5) #make needed ln-transforms of predictors#
occ$bio10 = log(occ$bio10+0.5)#
occ$bio12 = log(occ$bio12+0.5)#
occ$bio14 = log(occ$bio14+0.5)#
#
## read in regionally subset occupancy dataset (see file 'RCode_SplitDatabyEcoregion')#
setwd(path.dat)#
north = read.csv("north.csv")#
center = read.csv("center.csv")#
south = read.csv("south.csv")#
#
## Get ready to split data into high, mid, and low elevation sets#
## Don't actually split until after predictions are bound to occ#
L.thresh = 400#
H.thresh = 1200#
#
######## END INITIALIZATION OF DATA STRUCTURES#
#################################################################################
#################################################################################
######## START PREDICTION PROBABILITIESs#
## !!!!  WARNING  !!!! NEED DIFFERENT PREDICT FXNS FOR EACH MODEL TYPE#
#
## LR predictions#
for (i in 1:10) {#
	mod = get(paste("LR.mod2.",i, sep=""))#
	LRprob = predict(mod, occ, type="response")#
	occ = cbind(occ, LRprob)#
	}   #
for (i in 1:10) {#
	mod = get(paste("LR.mod2.",i, sep=""))#
	LRprob = predict(mod, north, type="response")#
	north = cbind(north, LRprob)#
	}   #
for (i in 1:10) {#
	mod = get(paste("LR.mod2.",i, sep=""))#
	LRprob = predict(mod, center, type="response")#
	center = cbind(center, LRprob)#
	}   #
for (i in 1:10) {#
	mod = get(paste("LR.mod2.",i, sep=""))#
	LRprob = predict(mod, south, type="response")#
	south = cbind(south, LRprob)#
	}   #
## GAM predictions#
## MUST load library gam for GAM prediction#
library(gam)#
for (i in 1:10) {#
	mod = get(paste("GAM.mod4.",i, sep=""))#
	GAMprob=predict(mod, occ, type="response")#
	occ = cbind(occ, GAMprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("GAM.mod4.",i, sep=""))#
	GAMprob=predict(mod, north, type="response")#
	north = cbind(north, GAMprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("GAM.mod4.",i, sep=""))#
	GAMprob=predict(mod, center, type="response")#
	center = cbind(center, GAMprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("GAM.mod4.",i, sep=""))#
	GAMprob=predict(mod, south, type="response")#
	south = cbind(south, GAMprob)#
	}#
## RF predictions#
## MUST load library randomForest for RF prediction#
## use type="prob" to obtain probability values; index of 2 grabs prob of presence=1#
library(randomForest) #
for (i in 1:10) {#
	mod = get(paste("RF.mod1.",i, sep=""))#
	RFprob=predict(mod, occ, type="prob", fun=predict, index=2, overwrite=T)#
	occ = cbind(occ, RFprob[,2])#
	}#
#names(occ)[96:105] = "RFprob"#
for (i in 1:10) {#
	mod = get(paste("RF.mod1.",i, sep=""))#
	RFprob=predict(mod, north, type="prob", fun=predict, index=2, overwrite=T)#
	north = cbind(north, RFprob[,2])#
	}#
#names(north)[96:105] = "RFprob"#
for (i in 1:10) {#
	mod = get(paste("RF.mod1.",i, sep=""))#
	RFprob=predict(mod, center, type="prob", fun=predict, index=2, overwrite=T)#
	center = cbind(center, RFprob[,2])#
	}#
#names(center)[96:105] = "RFprob"#
for (i in 1:10) {#
	mod = get(paste("RF.mod1.",i, sep=""))#
	RFprob=predict(mod, south, type="prob", fun=predict, index=2, overwrite=T)#
	south = cbind(south, RFprob[,2])#
	}#
#names(south)[96:105] = "RFprob"#
## BRT predictions#
## MUST load libraries gbm & dismo#
library(dismo)#
library(gbm)#
for (i in 1:10) {#
	mod = get(paste("BRT.mod4.",i, sep=""))#
	BRTprob=predict(mod, occ, n.trees=mod$gbm.call$best.trees, type="response") #
	occ = cbind(occ, BRTprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("BRT.mod4.",i, sep=""))#
	BRTprob=predict(mod, north, n.trees=mod$gbm.call$best.trees, type="response") #
	north = cbind(north, BRTprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("BRT.mod4.",i, sep=""))#
	BRTprob=predict(mod, center, n.trees=mod$gbm.call$best.trees, type="response") #
	center = cbind(center, BRTprob)#
	}#
for (i in 1:10) {#
	mod = get(paste("BRT.mod4.",i, sep=""))#
	BRTprob=predict(mod, south, n.trees=mod$gbm.call$best.trees, type="response") #
	south = cbind(south, BRTprob)#
	}
library(dismo)
for (i in 1:10) {#
	mod = get(paste("MAX.mod1.",i, sep=""))#
	MAXprob=predict(mod, occ, overwrite=T) #
	occ = cbind(occ, MAXprob)#
	}
